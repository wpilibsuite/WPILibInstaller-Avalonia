name: CI

on: [push, pull_request]

jobs:
  macos:
    name: Build - macOS
    runs-on: macos-10.15
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        name: Setup .NET
        with:
          dotnet-version: '5.0.100-rc.1.20452.10'

      - uses: actions/setup-java@v1
        name: Setup Java 11
        with:
          java-version: '11'

      - name: Build Installer with Gradle
        run: |
          ./gradlew generateInstallers -PXmx3072m -PmacBuild -DsystemProp.org.gradle.internal.http.connectionTimeout=180000 -DsystemProp.org.gradle.internal.http.socketTimeout=180000 -PjenkinsBuild

      - name: Copy Installer and Resources to Build Directory
        working-directory: build
        run: |
          mkdir -p pubOutputs
          cp -R outputs/WPILibInstaller.app pubOutputs/WPILibInstaller.app
          cp outputs/*.zip pubOutputs/WPILibInstaller.app/Contents/MacOS/
          cp ../WPILibInstaller-Avalonia/wpilib-256.ico pubOutputs/WPILibInstaller.app/Contents/Resources/
          cp outputs/*.tar.gz pubOutputs/

      - name: Import Developer ID Certificate
        run: |
          base64 -d <<< "${{ secrets.APPLE_CERTIFICATE_DATA }}" > /tmp/signing-certificate.p12
          security create-keychain -p ${{ secrets.APPLE_KEYCHAIN_PASSWORD }} wpilibsuite-keychain
          security default-keychain -s wpilibsuite-keychain
          security unlock-keychain -p ${{ secrets.APPLE_KEYCHAIN_PASSWORD }} wpilibsuite-keychain
          security import /tmp/signing-certificate.p12 -f pkcs12 -k wpilibsuite-keychain -P ${{ secrets.APPLE_CERTIFICATE_PASSWORD }} -T /usr/bin/codesign -x
          security set-key-partition-list -S apple-tool:,apple: -s -k ${{ secrets.APPLE_KEYCHAIN_PASSWORD }} wpilibsuite-keychain > /dev/null
          security set-keychain-settings -lut 2700
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Sign Installer with Developer ID
        run: ./codesign.sh ${{ secrets.APPLE_DEVELOPER_ID }}
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Notarize Installer
        uses: devbotsxyz/xcode-notarize@v1
        with:
          product-path: "build/pubOutputs/WPILibInstaller.app"
          primary-bundle-id: edu.wpi.first.wpilibinstaller
          appstore-connect-username: ${{ secrets.APPLE_NOTARIZATION_USERNAME }}
          appstore-connect-password: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Staple Notarization Ticket to Installer
        run: xcrun stapler staple -v build/pubOutputs/WPILibInstaller.app
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Create DMG
        working-directory: build
        run: |
          hdiutil create -volname WPILibInstaller -srcfolder pubOutputs/ -format UDRO WPILibInstaller.dmg

      - name: Sign DMG with Developer ID
        working-directory: build
        run: |
          codesign -s ${{ secrets.APPLE_DEVELOPER_ID }} WPILibInstaller.dmg
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Upload Installer DMG
        uses: actions/upload-artifact@v2
        with:
          name: wpilib-installer
          path: build/WPILibInstaller.dmg
