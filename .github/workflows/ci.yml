name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact-name: Linux
            build-options: "-PlinuxBuild"
          - os: windows-latest
            artifact-name: Win64
            build-options: ""
          - os: windows-latest
            artifact-name: Win32
            build-options: "-Pwindows32"
    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100-rc.1.20452.10
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build Installer
        shell: bash
        run: ./gradlew generateInstallers -PjenkinsBuild ${{ matrix.build-options }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact-name }}
          path: build/outputs/

  build-macos:
    name: Build - macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        name: Setup .NET
        with:
          dotnet-version: 5.0.100-rc.1.20452.10
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build Installer
        shell: bash
        run: ./gradlew generateInstallers -PjenkinsBuild -PmacBuild
      - name: Copy Installer and Resources to Build Directory
        working-directory: build
        run: |
          mkdir -p pubOutputs
          cp -R outputs/WPILibInstaller.app pubOutputs/WPILibInstaller.app
          cp outputs/*.zip pubOutputs/WPILibInstaller.app/Contents/MacOS/
          cp ../WPILibInstaller-Avalonia/wpilib-256.ico pubOutputs/WPILibInstaller.app/Contents/Resources/
          cp outputs/*.tar.gz pubOutputs/
      - name: Import Developer ID Certificate
        uses: wpilibsuite/import-signing-certificate@v1
        with:
          certificate-data: ${{ secrets.APPLE_CERTIFICATE_DATA }}
          certificate-passphrase: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Set Keychain Lock Timeout
        run: security set-keychain-settings -lut 2700
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Sign Installer with Developer ID
        run: ./codesign.sh ${{ secrets.APPLE_DEVELOPER_ID }}
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Notarize Installer
        uses: wpilibsuite/xcode-notarize@v1
        with:
          product-path: "build/pubOutputs/WPILibInstaller.app"
          primary-bundle-id: edu.wpi.first.wpilibinstaller
          appstore-connect-username: ${{ secrets.APPLE_NOTARIZATION_USERNAME }}
          appstore-connect-password: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Staple Notarization Ticket to Installer
        run: xcrun stapler staple -v build/pubOutputs/WPILibInstaller.app
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Create DMG
        working-directory: build
        run: |
          hdiutil create -volname WPILibInstaller -srcfolder pubOutputs/ -format UDRO WPILibInstaller.dmg

      - name: Sign DMG with Developer ID
        working-directory: build
        run: |
          codesign -s ${{ secrets.APPLE_DEVELOPER_ID }} WPILibInstaller.dmg
        if: |
          github.repository_owner == 'wpilibsuite' &&
          (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

      - name: Upload Installer DMG
        uses: actions/upload-artifact@v2
        with:
          name: macOS
          path: build/WPILibInstaller.dmg
