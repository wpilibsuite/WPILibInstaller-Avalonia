# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

jobs:
 - job: Windows_32_Bit
   pool:
    vmImage: 'windows-2019'
   timeoutInMinutes: 0

   steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.x
        includePreviewVersions: true
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        jdkVersionOption: '1.11'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'generateInstallers'
        options: '-Pwindows32 -DsystemProp.org.gradle.internal.http.connectionTimeout=180000 -DsystemProp.org.gradle.internal.http.socketTimeout=180000 -PjenkinsBuild --stacktrace'

    - task: CopyFiles@2
      inputs:
        contents: 'build\pubOutputs\**'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Win32'

 - job: Windows_64_Bit
   pool:
    vmImage: 'windows-2019'
   timeoutInMinutes: 0

   steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.x
        includePreviewVersions: true
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        jdkVersionOption: '1.11'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'generateInstallers'
        options: '-DsystemProp.org.gradle.internal.http.connectionTimeout=180000 -DsystemProp.org.gradle.internal.http.socketTimeout=180000 -PjenkinsBuild --stacktrace'

    - task: CopyFiles@2
      inputs:
        contents: 'build\pubOutputs\**'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Win64'

 - job: Mac
   pool:
    vmImage: 'macOS-10.14'
   timeoutInMinutes: 0

   steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.x
        includePreviewVersions: true
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        jdkVersionOption: '1.11'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'generateInstallers'
        options: '-PmacBuild -DsystemProp.org.gradle.internal.http.connectionTimeout=180000 -DsystemProp.org.gradle.internal.http.socketTimeout=180000 -PjenkinsBuild --stacktrace'

    - task: CopyFiles@2
      inputs:
        contents: 'build/pubOutputs/**'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Mac'

 - job: Linux
   pool:
    vmImage: 'ubuntu-18.04'
   timeoutInMinutes: 0

   steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.x
        includePreviewVersions: true
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        jdkVersionOption: 1.11
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'generateInstallers'
        options: '-PlinuxBuild -DsystemProp.org.gradle.internal.http.connectionTimeout=180000 -DsystemProp.org.gradle.internal.http.socketTimeout=180000 -PjenkinsBuild --stacktrace'

    - task: CopyFiles@2
      inputs:
        contents: 'build/pubOutputs/**'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Linux'
