def varsfile = file("files/frcvars.bat")
def varsfilePS = file("files/frcvars.ps1")
def varsfilesh = file("files/frcvars.sh")
def codefile = file("files/frccode")
def codefileCmd = file("files/frccode.cmd")
def icoFile = file("WPILibInstaller-Avalonia/Assets/wpilib-256.ico")
def codeAppArmorFile = file("files/frccode.AppArmor")
def utilAppArmorFile = file("files/wpilibutility.AppArmor")
def advantagescopeAppArmorFile = file("files/advantagescope.AppArmor")

def pathfolder = 'frccode'

ext.varConfigSetup = {
  return new Tuple2({ Task task ->
    task.inputs.property 'pathfolder', pathfolder
  }, { config ->
    config['PathFolder'] = pathfolder
  })
}

ext.varsZipSetup = { AbstractArchiveTask zip->
  zip.inputs.file varsfile
  zip.inputs.file varsfilePS
  zip.inputs.file varsfilesh
  zip.inputs.file icoFile
  zip.inputs.file codefile
  zip.inputs.file codefileCmd
  zip.inputs.file codeAppArmorFile
  zip.inputs.file utilAppArmorFile

  if (project.ext.buildClassifier == 'Windows') {
    zip.from (varsfile) {
      into "/$pathfolder"
      rename {
        "frcvars${frcYear}.bat"
      }
    }

    zip.from (varsfilePS) {
      into "/$pathfolder"
      rename {
        "frcvars${frcYear}.ps1"
      }
    }

    zip.from (codefileCmd) {
      into "/$pathfolder"
      rename {
        "frccode${frcYear}.cmd"
      }
    }
  } else {
    zip.from (varsfilesh) {
      into "/$pathfolder"
      rename {
        "frcvars${frcYear}.sh"
      }
    }

    zip.from (codefile) {
      into "/$pathfolder"
      rename {
        "frccode${frcYear}"
      }
    }
  }

  zip.from (icoFile) {
    into "/$pathfolder"
  }

  if (project.ext.buildClassifier == 'Linux') {
    zip.from (codeAppArmorFile) {
      into "/$pathfolder/AppArmor"
      rename {
        "frccode"
      }
    }

    zip.from (utilAppArmorFile) {
      into "/$pathfolder/AppArmor"
      rename {
        "wpilibutility"
      }
    }

    zip.from (advantagescopeAppArmorFile) {
      into "/$pathfolder/AppArmor"
      rename {
        "advantagescope"
      }
    }
  }
}
